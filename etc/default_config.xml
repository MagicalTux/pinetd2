<?xml version="1.0" encoding="utf-8"?>
<Config>
	<!--
	 Global

	 Global settings for all daemons.

	 Settings here will be set for all daemons, and for Core.
	 They can be overloaded after this
	-->
	<Global>
		<!--
		 Global/RemoveMe

		 annoying line to make sure you noticed there is a config file.
		 Only works in global context.

		 Example:

		 <RemoveMe>The config thou shall edit</RemoveMe>
		-->
		<RemoveMe>Please edit config.xml and remove the line containing this text</RemoveMe>
		<!--
		 Name

		 Define this node's name

		 Can be used in any context

		 Example:

		 <Name>mail.example.com</Name>
		-->
		<Name>GiveMeAName</Name>
		<!--
		 PidFile

		 Name of the file where the core daemon's pid is written

		 Not implemented

		 Example:

		 <PidFile>system.pid</PidFile>
		-->
		<PidFile>system.pid</PidFile>
		<Security Strict="0">
			<Fork/>
			<Chroot/>
			<SUID User="nobody" Group="nogroup"/>
		</Security>
		<Network>
			<Bind>
				<!--
				 Ip

				 Defines which IP we should listen to.

				 Attributes:
				  * External: external IP when in NAT/DMZ configuration (optionnal)
				-->
				<Ip External="127.0.0.1">127.0.0.1</Ip>
			</Bind>
		</Network>
		<!--
		 Storage

		 Where to store data.

		 Available drivers: MySQL, SQLite3

		 Examples:

		 <MySQL Login="root" Password="" Host="localhost" Database="test"/>
		 <SQLite3 File="/tmp/database.sqlite3"/>
		-->
		<Storage>
			<MySQL Login="root" Password="" Host="localhost" Database="test"/>
		</Storage>
	</Global>
	<!--
	 Daemons

	 Here are the per-daemon configuration options.

	 Settings in this scope will only apply to one kind of daemon.
	-->
	<Daemons>
		<FTPd>
			<AnonymousRoot>/var/ftp</AnonymousRoot>
			<MaxUsers Anonymous="90%">120</MaxUsers>
			<Network MaxUsersPerIp="4"/>
			<Identification Login="test" Password="test"/>
		</FTPd>
		<FTPd_SQL>
			<AnonymousRoot>/var/ftp</AnonymousRoot>
			<MaxUsers Anonymous="50%">120</MaxUsers>
			<Network MaxUsersPerIp="4"/>
			<SQL>
				<LoginQuery><![CDATA[SELECT password, root FROM users WHERE login = %s]]></LoginQuery>
			</SQL>
		</FTPd_SQL>
		<PMaild>
			<Mails Path="spool/phpmaild"/>
			<DefaultDomain>example.com</DefaultDomain>
			<MTA MaxProcesses="5" StartThreshold="5" MaxAttempt="10" MailMaxLifetime="48"/>
			<!-- max mail size in MB, can be decimal with a dot decimal point (ie 0.5) -->
			<SMTP MaxMailSize="100"/>
		</PMaild>
		<!--
		 DNSd

		 You can configure the DNS daemon as a slave:

		 <DNSd>
		   <Master Name="GiveMeAName" Host="ns1.example.com" Signature="qwerty" Port="53"/>
		 </DNSd>

		 OR as master, with a control source:

		 <DNSd>
		   <PeersArray>
		     <Peer Name="MyPeer" Signature="qwerty" Type="control"/>
		     <Peer Name="MySlave" Signature="qwerty" Type="slave"/>
		   </PeersArray>
		 </DNSd>
      		-->
		<DNSd>
		</DNSd>

		<!--
		 SocketPolicyd

		 This daemon serves socket policies for flash clients. This policy will allow access from example.com to port 1234

		 Port allows definition of ranges & lists, for example 1234,2000-2009. More than one policy can be put

		 <SocketPolicyd>
		   <PolicyArray>
		     <Policy Domain="example.com" Port="1234"/>
		   </PolicyArray>
		 </SocketPolicyd>
		-->
	</Daemons>
	<!--
	 SSL

	 SSL settings (certificates), see examples.
	-->
	<SSL>
		<Certificate name="main">
			<Option name="verify_peer" Value="false"/>
			<Option name="allow_self_signed" Value="true"/>
			<Option name="local_cert" Value="newkey.pem"/>
			<Option name="passphrase" Value="" Disabled="1"/>
		</Certificate>
		<Certificate name="smtp">
			<Option name="verify_peer" Value="false"/>
			<Option name="allow_self_signed" Value="true"/>
			<Option name="cafile" Value="newkey.pem" Disabled="1"/>
			<Option name="capath" Value="" Disabled="1"/>
			<Option name="local_cert" Value="newkey.pem"/>
			<Option name="passphrase" Value="" Disabled="1"/>
			<Option name="CN_match" Value="" Disabled="1"/>
		</Certificate>
	</SSL>
	<!--
	 Processes

	 List of running processes. PortOffset can be used to apply a global
	 offset to all running daemons.

	 Existing kinds of daemons:
	 * TCP: standard TCP daemon
	 * UDP: standard UDP daemon
	 * Process: A background processor, not opening any fixed network port

	 It is possible to add configuration options inside a daemon (finest scope)
	-->
	<Processes PortOffset="0">
		<!-- FTPd -->
		<TCP Port="21" Daemon="FTPd" />
		<TCP Port="990" Daemon="FTPd" SSL="main" />
		<!-- DNSd -->
		<UDP Port="53" Daemon="DNSd" Service="UDP" />
		<TCP Port="53" Daemon="DNSd" Service="TCP" />
		<Process Daemon="DNSd" Service="Process" />
		<!-- HTTPd -->
		<TCP Port="80" Daemon="HTTPd"/>
		<!-- PMaild -->
		<TCP Port="25" Daemon="PMaild" Service="SMTP" />
		<TCP Port="110" Daemon="PMaild" Service="POP3" />
		<TCP Port="995" Daemon="PMaild" Service="POP3" SSL="main" />
		<TCP Port="143" Daemon="PMaild" Service="IMAP4" SSL="~main"/>
		<TCP Port="993" Daemon="PMaild" Service="IMAP4" SSL="main" />
		<Process Daemon="PMaild" Service="MTA"/>
		<!-- SocketPolicyd -->
		<TCP Port="843" Daemon="SocketPolicyd" />
	</Processes>
</Config>
